services:
  api:
    image: ${DOCKER_REGISTRY-}api-plants
    build:
      context: .
      dockerfile: API/Dockerfile
    networks:
      - plants      
  app:
    image: ${DOCKER_REGISTRY-}app-plants
    environment:
      - CHOKIDAR_USEPOLLING=true
      - NODE_ENV=development
    build: 
      context: ./vueproject1
      dockerfile: Dockerfile
      target: development
    dns:
      - 8.8.8.8
    volumes: 
      - ./vueproject1:/app  # Mount these as volumes so we can watch them. 
      - /app/node_modules  # I think this was so it didn't overwrite or copy or something...
      - ./files:/files
    ports: 
      - 5179:5173
    restart: always
    networks:
      - plants
  db:
    image: postgres:latest
    env_file: db.env
    ports:
      - "5480:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U plants -d plants"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: unless-stopped
    volumes:   
      - .:/docker-entrypoint-initdb.d
      - pgdata:/var/lib/postgresql/data
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 4G
    networks:
      - plants

networks:
  plants:
volumes:
  pgdata: